{"version":3,"sources":["redux/reducers.tsx","components/delete-button/delete-button.tsx","components/item/item.tsx","components/items-list/items-list.tsx","components/searchbar/searchbar.tsx","App.tsx","redux/visibilityFilterSlice.ts","reportWebVitals.ts","redux/rootReducer.tsx","redux/store.tsx","index.tsx"],"names":["itemslice","createSlice","name","initialState","reducers","addTodo","state","action","push","payload","deleteTodo","splice","findIndex","v","id","toggleTodo","todo","find","completed","actions","text","dispatch","a","newTodo","Math","random","toString","substr","DeleteButton","useDispatch","deleteItem","console","log","plsDelete","className","onClick","ListItem","type","List","items","useSelector","map","Searchbar","React","useState","item","setItem","data","setData","matchList","setMatchList","showMatchList","setShowMatchList","listEl","useRef","useEffect","fetch","headers","Accept","then","response","json","onSubmit","e","preventDefault","alert","trim","ref","input","focus","value","onChange","target","inp","matches","filter","regex","RegExp","match","length","searchItem","placeholder","autoComplete","autoFocus","maxLength","i","handleItemClick","src","alt","height","App","VisibilityFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ShowAll","visibilityFilterSlice","setVisibilityFilter","rootReducer","combineReducers","visibilityFilter","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be7c62ae.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { AppThunk, AppDispatch } from \"./store\";\r\nimport { Todo } from \"./actions\";\r\n\r\nconst initialState: Todo[] = [];\r\n\r\nconst itemslice = createSlice({\r\n  name: \"items\",\r\n  initialState,\r\n  reducers: {\r\n    // add item to list\r\n    addTodo(state, action: PayloadAction<Todo>) {\r\n      state.push(action.payload);\r\n    },\r\n    // delete item from list\r\n    deleteTodo(state, action: PayloadAction<Todo>) {\r\n      state.splice(\r\n        state.findIndex((v) => v.id === action.payload.id),\r\n        1\r\n      );\r\n    },\r\n    // weâ€™re filtering for the todo to toggle, and updating it directly.\r\n    toggleTodo(state, action: PayloadAction<Todo>) {\r\n      let todo = state.find((todo) => todo.id === action.payload.id);\r\n      if (todo) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// toggleTodo export\r\nexport const { toggleTodo } = itemslice.actions;\r\n// addTodo export\r\nexport const addTodo = (text: string): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  const newTodo: Todo = {\r\n    id: Math.random().toString(36).substr(2, 9),\r\n    completed: false,\r\n    text: text,\r\n  };\r\n  dispatch(itemslice.actions.addTodo(newTodo));\r\n};\r\n// deleteTodo export\r\n// export const { deleteTodo } = itemslice.actions;\r\n\r\nexport const deleteTodo = (id: string): AppThunk => async (\r\n  dispatch: AppDispatch\r\n) => {\r\n  const plsDelete: Todo = {\r\n    id: id,\r\n    text: \"text\",\r\n    completed: false,\r\n  };\r\n  dispatch(itemslice.actions.deleteTodo(plsDelete));\r\n};\r\n\r\nexport default itemslice.reducer;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteTodo } from \"../../redux/reducers\";\r\n\r\ninterface TodoProps {\r\n  id: string;\r\n}\r\n\r\nexport default function DeleteButton({ id }: TodoProps) {\r\n  const dispatch = useDispatch();\r\n\r\n  function deleteItem(id: any) {\r\n    console.log(\"id is: \", id);\r\n    dispatch(deleteTodo(id));\r\n  }\r\n\r\n  return (\r\n    <button className=\"delete__button\" onClick={() => deleteItem(id)}>\r\n      Remove\r\n    </button>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DeleteButton from \"../delete-button/delete-button\";\r\n\r\ninterface TodoProps {\r\n  completed: boolean;\r\n  text: string;\r\n  id: string;\r\n}\r\n\r\nexport default function ListItem({ completed, text, id }: TodoProps) {\r\n  return (\r\n    <li className=\"items-list__item\">\r\n      <div>\r\n        <input type=\"checkbox\" />\r\n        <p> {text}</p>\r\n      </div>\r\n      <DeleteButton id={id} />\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ListItem from \"../item/item\";\r\nimport { RootState } from \"../../redux/rootReducer\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function List() {\r\n  const items = useSelector((state: RootState) => state.items);\r\n\r\n  return (\r\n    <div className=\"list__item\" id=\"style-1\">\r\n      <ul className=\"items-list\">\r\n        {items.map((todo) => (\r\n          <ListItem key={todo.id} {...todo} id={todo.id} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addTodo } from \"../../redux/reducers\";\r\n\r\nexport default function Searchbar(): JSX.Element {\r\n  const dispatch = useDispatch();\r\n  // for adding item to shopping list\r\n  const [item, setItem] = React.useState(\"\");\r\n  // for getting data using fetch\r\n  const [data, setData] = React.useState([]);\r\n  // for list of matching search\r\n  const [matchList, setMatchList] = React.useState<any[]>([]);\r\n  const [showMatchList, setShowMatchList] = React.useState(false);\r\n\r\n  let listEl = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // getting data for autocomplete\r\n    getData();\r\n  }, []);\r\n  function getData() {\r\n    fetch(\"data.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    })\r\n      .then(function (response) {\r\n        console.log(response);\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n  }\r\n\r\n  function searchItem(inp: string) {\r\n    console.log(\"data is: \", data);\r\n    let matches = data.filter((item: { name: string }) => {\r\n      const regex = new RegExp(`^${inp}`, \"gi\");\r\n      return item.name.match(regex);\r\n    });\r\n    if (data.length === 0) {\r\n      matches = [];\r\n      setItem(\"\");\r\n    }\r\n    setMatchList(matches);\r\n    setShowMatchList(true);\r\n  }\r\n\r\n  // handle change on input\r\n  function handleChange(e: { target: HTMLInputElement }) {\r\n    e.target.value !== \"\"\r\n      ? searchItem(e.target.value)\r\n      : setShowMatchList(false);\r\n    setItem(e.target.value);\r\n  }\r\n\r\n  // handles form submit\r\n  function handleSubmit(e: any) {\r\n    e.preventDefault();\r\n    item ? addTodo(item) : alert(\"plaese enter item to list\");\r\n    if (!item.trim()) {\r\n      return;\r\n    }\r\n    dispatch(addTodo(item));\r\n    setItem(\"\");\r\n  }\r\n\r\n  function handleItemClick(i: any) {\r\n    setItem(i);\r\n    setShowMatchList(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form-group \" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"form-field\"\r\n          id=\"search\"\r\n          ref={(input) => input && input.focus()}\r\n          value={item}\r\n          onChange={handleChange}\r\n          placeholder=\"add something to the list..\"\r\n          autoComplete=\"off\"\r\n          name=\"myInput\"\r\n          autoFocus\r\n          maxLength={20}\r\n        />\r\n        <button type=\"submit\">Add</button>\r\n      </form>\r\n      {showMatchList && (\r\n        <ul\r\n          className=\"list-group list-group-flush match-list\"\r\n          ref={listEl}\r\n          id=\"style-1\"\r\n        >\r\n          {matchList.map((match, i) => (\r\n            <li\r\n              className=\"match-list__item \"\r\n              key={i}\r\n              onClick={() => handleItemClick(match.name)}\r\n            >\r\n              <img src=\"cart-outline.svg\" alt=\"\" height=\"15px\" />\r\n              {match.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport List from \"./components/items-list/items-list\";\r\nimport Searchbar from \"./components/searchbar/searchbar\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Shopping List</h1>\r\n      <Searchbar />\r\n      <List />\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n// const [direction, setDirection] = React.useState(false);\r\n\r\n// const isRTL = (handleSubmit: string) => {\r\n//   var ltrChars =\r\n//       \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\r\n//       \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\",\r\n//     rtlChars = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\",\r\n//     rtlDirCheck = new RegExp(\"^[^\" + ltrChars + \"]*[\" + rtlChars + \"]\");\r\n\r\n//   return rtlDirCheck.test(handleSubmit);\r\n// };\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport enum VisibilityFilter {\r\n  ShowAll = \"SHOW_ALL\",\r\n  ShowCompleted = \"SHOW_COMPLETED\",\r\n  ShowActive = \"SHOW_ACTIVE\",\r\n}\r\n\r\nconst initialState = VisibilityFilter.ShowAll;\r\n\r\nconst visibilityFilterSlice = createSlice({\r\n  name: \"visibilityFilter\",\r\n  initialState,\r\n  reducers: {\r\n    setVisibilityFilter(state, action: PayloadAction<VisibilityFilter>) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setVisibilityFilter } = visibilityFilterSlice.actions;\r\n\r\nexport default visibilityFilterSlice.reducer;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport items from \"./reducers\";\r\n\r\nimport visibilityFilter from \"./visibilityFilterSlice\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items,\r\n\r\n  visibilityFilter,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport default rootReducer;\r\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport rootReducer, { RootState } from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nif (process.env.NODE_ENV === \"development\" && module.hot) {\r\n  module.hot.accept(\"./rootReducer\", () => {\r\n    const newRootReducer = require(\"./rootReducer\").default;\r\n    store.replaceReducer(newRootReducer);\r\n  });\r\n}\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nif (process.env.NODE_ENV === \"development\" && module.hot) {\r\n  module.hot.accept(\"./App\");\r\n}\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}