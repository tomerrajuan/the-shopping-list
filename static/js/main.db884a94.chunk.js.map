{"version":3,"sources":["redux/reducers.tsx","components/delete-button/delete-button.tsx","components/item/item.tsx","components/items-list/items-list.tsx","components/searchbar/searchbar.tsx","App.tsx","redux/visibilityFilterSlice.ts","reportWebVitals.ts","redux/rootReducer.tsx","redux/store.tsx","index.tsx"],"names":["itemslice","createSlice","name","initialState","reducers","addTodo","state","action","push","payload","deleteTodo","splice","findIndex","v","id","toggleTodo","todo","find","completed","actions","text","dispatch","a","newTodo","Math","random","toString","substr","DeleteButton","useDispatch","deleteItem","console","log","plsDelete","className","onClick","ListItem","type","List","items","useSelector","map","Searchbar","React","useState","item","setItem","data","setData","matchList","setMatchList","showMatchList","setShowMatchList","listEl","useRef","useEffect","fetch","headers","Accept","then","response","json","onSubmit","e","preventDefault","alert","trim","ref","input","focus","value","onChange","target","inp","matches","filter","regex","RegExp","match","length","searchItem","placeholder","autoComplete","autoFocus","maxLength","i","handleItemClick","App","VisibilityFilter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ShowAll","visibilityFilterSlice","setVisibilityFilter","rootReducer","combineReducers","visibilityFilter","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.db884a94.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nimport { AppThunk, AppDispatch } from \"./store\";\nimport { Todo } from \"./actions\";\n\nconst initialState: Todo[] = [];\n\nconst itemslice = createSlice({\n  name: \"items\",\n  initialState,\n  reducers: {\n    // add item to list\n    addTodo(state, action: PayloadAction<Todo>) {\n      state.push(action.payload);\n    },\n    // delete item from list\n    deleteTodo(state, action: PayloadAction<Todo>) {\n      state.splice(\n        state.findIndex((v) => v.id === action.payload.id),\n        1\n      );\n    },\n    // weâ€™re filtering for the todo to toggle, and updating it directly.\n    toggleTodo(state, action: PayloadAction<Todo>) {\n      let todo = state.find((todo) => todo.id === action.payload.id);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    },\n  },\n});\n\n// toggleTodo export\nexport const { toggleTodo } = itemslice.actions;\n// addTodo export\nexport const addTodo = (text: string): AppThunk => async (\n  dispatch: AppDispatch\n) => {\n  const newTodo: Todo = {\n    id: Math.random().toString(36).substr(2, 9),\n    completed: false,\n    text: text,\n  };\n  dispatch(itemslice.actions.addTodo(newTodo));\n};\n// deleteTodo export\n// export const { deleteTodo } = itemslice.actions;\n\nexport const deleteTodo = (id: string): AppThunk => async (\n  dispatch: AppDispatch\n) => {\n  const plsDelete: Todo = {\n    id: id,\n    text: \"text\",\n    completed: false,\n  };\n  dispatch(itemslice.actions.deleteTodo(plsDelete));\n};\n\nexport default itemslice.reducer;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTodo } from \"../../redux/reducers\";\n\ninterface TodoProps {\n  id: string;\n}\n\nexport default function DeleteButton({ id }: TodoProps) {\n  const dispatch = useDispatch();\n\n  function deleteItem(id: any) {\n    console.log(\"id is: \", id);\n    dispatch(deleteTodo(id));\n  }\n\n  return (\n    <button className=\"delete__button\" onClick={() => deleteItem(id)}>\n      Remove\n    </button>\n  );\n}\n","import React from \"react\";\nimport DeleteButton from \"../delete-button/delete-button\";\n\ninterface TodoProps {\n  completed: boolean;\n  text: string;\n  id: string;\n}\n\nexport default function ListItem({ completed, text, id }: TodoProps) {\n  return (\n    <li className=\"items-list__item\">\n      <div>\n        <input type=\"checkbox\" />\n        <p> {text}</p>\n      </div>\n      <DeleteButton id={id} />\n    </li>\n  );\n}\n","import React from \"react\";\nimport ListItem from \"../item/item\";\nimport { RootState } from \"../../redux/rootReducer\";\nimport { useSelector } from \"react-redux\";\n\nexport default function List() {\n  const items = useSelector((state: RootState) => state.items);\n\n  return (\n    <div className=\"list__item\" id=\"style-1\">\n      <ul className=\"items-list\">\n        {items.map((todo) => {\n          return <ListItem key={todo.id} {...todo} id={todo.id} />;\n        })}\n      </ul>\n    </div>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addTodo } from \"../../redux/reducers\";\nexport default function Searchbar(): JSX.Element {\n  const dispatch = useDispatch();\n  // for adding item to shopping list\n  const [item, setItem] = React.useState(\"\");\n  // for getting data using fetch\n  const [data, setData] = React.useState([]);\n  // for list of matching search\n  const [matchList, setMatchList] = React.useState<any[]>([]);\n  const [showMatchList, setShowMatchList] = React.useState(false);\n\n  let listEl = useRef(null);\n\n  useEffect(() => {\n    // getting data for autocomplete\n    getData();\n  }, []);\n  function getData() {\n    fetch(\"data.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then(function (response) {\n        console.log(response);\n        return response.json();\n      })\n      .then((data) => {\n        setData(data);\n      });\n  }\n\n  function searchItem(inp: string) {\n    let matches = data.filter((item: { name: string }) => {\n      const regex = new RegExp(`^${inp}`, \"gi\");\n      return item.name.match(regex);\n    });\n    console.log(\"matches are: \", matches);\n\n    if (matches.length < 1) {\n      console.log(\"we are here\");\n      setItem(\"\");\n      return;\n    }\n    setMatchList(matches);\n    setShowMatchList(true);\n  }\n\n  // handle change on input\n  function handleChange(e: { target: HTMLInputElement }) {\n    e.target.value !== \"\"\n      ? searchItem(e.target.value)\n      : setShowMatchList(false);\n    setItem(e.target.value);\n  }\n\n  // handles form submit\n  function handleSubmit(e: any) {\n    e.preventDefault();\n    item ? addTodo(item) : alert(\"plaese enter item to list\");\n    if (!item.trim()) {\n      return;\n    }\n    dispatch(addTodo(item));\n    setItem(\"\");\n  }\n\n  function handleItemClick(i: any) {\n    setItem(i);\n    setShowMatchList(false);\n  }\n\n  return (\n    <>\n      <form className=\"form-group \" onSubmit={handleSubmit}>\n        <input\n          className=\"form-field\"\n          id=\"search\"\n          ref={(input) => input && input.focus()}\n          value={item}\n          onChange={handleChange}\n          placeholder=\"add something to the list..\"\n          autoComplete=\"off\"\n          name=\"myInput\"\n          autoFocus\n          maxLength={20}\n        />\n        <button type=\"submit\">Add</button>\n      </form>\n      {showMatchList && (\n        <ul\n          className=\"list-group list-group-flush match-list\"\n          ref={listEl}\n          id=\"style-1\"\n        >\n          {matchList.map((match, i) => {\n            return (\n              <li\n                className=\"match-list__item \"\n                key={i}\n                onClick={() => handleItemClick(match.name)}\n              >\n                {match.name}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport List from \"./components/items-list/items-list\";\nimport Searchbar from \"./components/searchbar/searchbar\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      <h1>Shopping List</h1>\n      <Searchbar />\n      <List />\n    </div>\n  );\n}\nexport default App;\n\n// const [direction, setDirection] = React.useState(false);\n\n// const isRTL = (handleSubmit: string) => {\n//   var ltrChars =\n//       \"A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\" +\n//       \"\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF\",\n//     rtlChars = \"\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC\",\n//     rtlDirCheck = new RegExp(\"^[^\" + ltrChars + \"]*[\" + rtlChars + \"]\");\n\n//   return rtlDirCheck.test(handleSubmit);\n// };\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport enum VisibilityFilter {\n  ShowAll = \"SHOW_ALL\",\n  ShowCompleted = \"SHOW_COMPLETED\",\n  ShowActive = \"SHOW_ACTIVE\",\n}\n\nconst initialState = VisibilityFilter.ShowAll;\n\nconst visibilityFilterSlice = createSlice({\n  name: \"visibilityFilter\",\n  initialState,\n  reducers: {\n    setVisibilityFilter(state, action: PayloadAction<VisibilityFilter>) {\n      return action.payload;\n    },\n  },\n});\n\nexport const { setVisibilityFilter } = visibilityFilterSlice.actions;\n\nexport default visibilityFilterSlice.reducer;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { combineReducers } from \"@reduxjs/toolkit\";\n\nimport items from \"./reducers\";\n\nimport visibilityFilter from \"./visibilityFilterSlice\";\n\nconst rootReducer = combineReducers({\n  items,\n\n  visibilityFilter,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore, Action } from \"@reduxjs/toolkit\";\nimport { ThunkAction } from \"redux-thunk\";\nimport rootReducer, { RootState } from \"./rootReducer\";\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./rootReducer\", () => {\n    const newRootReducer = require(\"./rootReducer\").default;\n    store.replaceReducer(newRootReducer);\n  });\n}\n\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk = ThunkAction<void, RootState, null, Action<string>>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nif (process.env.NODE_ENV === \"development\" && module.hot) {\n  module.hot.accept(\"./App\");\n}\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}